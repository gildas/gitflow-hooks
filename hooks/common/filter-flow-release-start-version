#!/usr/bin/env bash

# Runs during git flow release start
#
# Positional arguments:
# $1    Version
#
# Return VERSION - When VERSION is returned empty, git-flow will stop as the
# version is necessary
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
# @see: https://github.com/petervanderdoes/gitflow-avh/blob/develop/hooks/filter-flow-release-start-version
VERSION=$1

# Find the folder location through potential symlinks
if [[ -z $HOOKS_DIR ]]; then
  HOOKS_DIR="$0"
  while [[ -h $HOOKS_DIR ]]; do HOOK_PATH=$(readlink "$HOOKS_DIR"); done
  HOOKS_DIR=$(dirname $HOOKS_DIR)
fi
source "$HOOKS_DIR"/functions.sh
source "$HOOKS_DIR"/functions-lang.sh

verbose "Hook: filter-flow-release-start-version"

VERSION_FILE=$(find_version_file)
die_on_error

VERSION=$(normalize_version "$VERSION")
BUMP="$VERSION"  # Use the version as a bump label (e.g.: git flow xx start patch)

verbose "Version Bump: $BUMP"
if [[ ! $BUMP =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
  VERSION=$(get_version  "$VERSION_FILE") ; die_on_error
  VERSION=$(bump_version $VERSION $BUMP)  ; die_on_error
fi
verbose "New Version: $VERSION"

if get_config_bool gitflow.bump-appveyor true; then
  if [[ -f appveyor.yml ]]; then
    update_appveyor_version appveyor.yml $VERSION
    git stash push --message "appveyor" --quiet appveyor.yml
  fi
fi

if get_config_bool gitflow.bump-chart true; then
  CHART_DIR=$(get_config gitflow.path.chart "$ROOT_DIR/chart")
  if [[ -f $CHART_DIR/Chart.yaml ]]; then
    update_chart_appversion "$CHART_DIR/Chart.yaml" $VERSION
    if [[ ! $BUMP =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
      CHART_VERSION=$(get_chart_version "$CHART_DIR/Chart.yaml")
      CHART_VERSION=$(bump_version      $CHART_VERSION $BUMP)
      status=$?
    else
      CHART_VERSION=$BUMP
    fi
    if (( ! status )); then
      update_chart_version "$CHART_DIR/Chart.yaml" $CHART_VERSION
    else
      warn "Helm Chart Version was not modified, BUMP=$BUMP"
    fi
    git stash push --message "chart" --quiet "$CHART_DIR/Chart.yaml"
  fi
fi

# Return the VERSION
echo "${VERSION}"
exit 0
