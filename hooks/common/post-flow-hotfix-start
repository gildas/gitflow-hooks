#!/usr/bin/env bash

# Runs at the end of git flow hotfix start
#
# Positional arguments:
# $1    The version (including the version prefix)
# $2    The origin remote
# $3    The full branch name (including the feature prefix)
# $4    The base from which this feature is started
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
# @see https://github.com/petervanderdoes/gitflow-avh/blob/develop/hooks/post-flow-hotfix-start
VERSION=$1
ORIGIN=$2
BRANCH=$3
BASE=$4

# Find the folder location through potential symlinks
if [[ -z $HOOKS_DIR ]]; then
  HOOKS_DIR="$0"
  while [[ -h $HOOKS_DIR ]]; do HOOK_PATH=$(readlink "$HOOKS_DIR"); done
  HOOKS_DIR=$(dirname $HOOKS_DIR)
fi
source "$HOOKS_DIR"/functions.sh
source "$HOOKS_DIR"/functions-lang.sh

VERSION_FILE=$(find_version_file)
die_on_error "$VERSION_FILE"

VERSION=$(normalize_version "$VERSION")

update_version_file "$VERSION_FILE" $VERSION
die_on_error "Failed to update $VERSION_FILE with version $VERSION"

if [[ -f $ROOT_DIR/chart/Chart.yaml ]]; then
  git stash pop --quiet
  git add "$ROOT_DIR/chart/Chart.yaml"
fi

git add "$VERSION_FILE"
die_on_error "Failed to stage $VERSION_FILE"
git commit -m "Bumped to version $VERSION"
die_on_error "Failed to commit new version $VERSION"

exit 0
