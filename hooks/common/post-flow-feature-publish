#!/usr/bin/env bash
#
# Runs at the end of git flow feature finish
#
# Positional arguments:
# $1    The friendly name of the branch
# $2    The origin remote
# $3    The full branch name (including the feature prefix)
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
# @see https://github.com/petervanderdoes/gitflow-avh/blob/develop/hooks/post-flow-feature-publish
VERSION=$1
ORIGIN=$2
BRANCH=$3
ORIGIN_URL=$(git config remote.${ORIGIN}.url)

# Find the folder location through potential symlinks
if [[ -z $HOOKS_DIR ]]; then
  HOOKS_DIR="$0"
  while [[ -h $HOOKS_DIR ]]; do HOOK_PATH=$(readlink "$HOOKS_DIR"); done
  HOOKS_DIR=$(dirname $HOOKS_DIR)
fi
source "$HOOKS_DIR"/functions.sh

if ! get_config_bool gitflow.use-pull-request true; then
  verbose "Pull requests are disabled. Skipping PR creation."
  exit 0
fi

if [[ $ORIGIN_URL =~ ^git@github\.com ]]; then
  repo=$(echo $ORIGIN_URL | sed -e 's/^git@github\.com://' -e 's/\.git$//')
  if command -v gh &> /dev/null; then
    gh pr create \
      --title "Merge $BRANCH" \
      --body  "Feature $VERSION. Do not delete the feature branch after the merge." \
      --base  $DEVELOP_BRANCH \
      --repo  $repo
  # TODO: use --web optionally so the user can edit the PR?!?
  else
    echo ""
    echo "Create PR at: https://github.com/$repo/compare/$BRANCH?expand=1"
    echo "Do not delete the feature branch after the PR is merged. It will be deleted automatically when the feature is finished."
    echo ""
  fi
else
  echo "Create a PR manually at $ORIGIN_URL"
  echo "Do not delete the feature branch after the PR is merged. It will be deleted automatically when the feature is finished."
fi

exit 0
